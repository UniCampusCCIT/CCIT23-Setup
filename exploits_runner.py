import os
import threading
import time

exploits_directory = "exploits"

def run_exploit(exploit_file):
    print(f"Running exploit: {exploit_file}")
    try:
        # Load the exploit code from the file
        with open(exploit_file, "r") as file:
            exploit_code = file.read()

        # Execute the exploit code
        exec(exploit_code)
    except Exception as e:
        print(f"Error executing exploit: {e}")

def run_exploits():
    while True:
        start_time = time.time()

        exploit_files = os.listdir(exploits_directory)
        threads = []
        for exploit_file in exploit_files:
            exploit_path = os.path.join(exploits_directory, exploit_file)
            if os.path.isfile(exploit_path) and exploit_file.endswith(".py"):
                thread = threading.Thread(target=run_exploit, args=(exploit_path,))
                thread.start()
                threads.append(thread)
        
        # Wait for all threads to complete
        for thread in threads:
            thread.join()
        
        end_time = time.time()
        delta = end_time - start_time

        try:
            time.sleep(120 - delta)  # Wait for 2 minutes (tick duration)
        except:
            pass

if __name__ == "__main__":
    run_exploits()
